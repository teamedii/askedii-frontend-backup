name: askedii-frontend

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: edii

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          use: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create Buildx Builder
        run: |
          echo "🔧 Creating isolated builder"
          docker buildx create --name mybuilder --use
          docker buildx inspect mybuilder --bootstrap

      - name: Build, tag, and push ARM64 image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          echo "🏗️ Building for platform: linux/arm64"
          echo "📦 Target Image: $ECR_REGISTRY/$ECR_REPOSITORY:aflatest"

          docker buildx build \
            --builder mybuilder \
            --platform=linux/arm64 \
            --tag=$ECR_REGISTRY/$ECR_REPOSITORY:aflatest \
            --push \
            --progress=plain \
            .

          echo "✅ Build completed and pushed!"
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:aflatest" >> $GITHUB_OUTPUT

      - name: Remove buildx builder
        if: always()
        run: |
          echo "🧼 Cleaning up builder"
          docker buildx rm mybuilder || true

      - name: Check running processes (for debugging)
        if: always()
        run: |
          echo "🔍 Checking running qemu/buildx processes"
          ps aux | grep -i 'qemu\|buildx' || true

      - name: Image deployment info
        run: |
          echo "🚀 Image pushed successfully!"
          echo "📦 Image URI: ${{ steps.build-image.outputs.image }}"
          echo "🏗️  Architecture: ARM64 optimized"
          echo "🌍 Region: ${{ env.AWS_REGION }}"
          echo "📂 Repository: ${{ env.ECR_REPOSITORY }}"
          echo "🏷️  Tag: aflatest"
